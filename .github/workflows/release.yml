name: Release

on:
    push:
        tags:
            - "v[0-9]+.*"

permissions:
    contents: write

jobs:
    create_release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Release
              uses: softprops/action-gh-release@v2

    release_assets:
        needs: create_release
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - build: linux-x64
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact_name: "nvml-server-linux-amd64"
                    - build: linux-arm64
                      os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      artifact_name: "nvml-server-linux-arm64"
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: stable
                  target: ${{ matrix.target }}

            - name: Install gcc-aarch64-linux-gnu
              run: |
                  sudo apt update
                  sudo apt install -y gcc-aarch64-linux-gnu
                  echo -e "[target.aarch64-unknown-linux-gnu]\nlinker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml
              if: matrix.build == 'linux-arm64'

            - name: Build
              run: cargo build --release --target ${{ matrix.target }}

            - name: Upload to Release
              uses: svenstaro/upload-release-action@v2
              if: matrix.os != 'windows-latest'
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: target/${{ matrix.target }}/release/nvml-server
                  asset_name: ${{ matrix.artifact_name }}
                  tag: ${{ github.ref }}
